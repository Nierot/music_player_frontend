{"version":3,"sources":["settings.js","lib/core.js","spotify/SpotifyWebPlayback.js","player/Timer.js","mp3/MP3Player.js","player/events/Particles.js","player/events/AdtRadEvent.js","player/events/ShotsEvent.js","player/events/EscalatieEvent.js","player/events/WaterEvent.js","spotify/SpotifyAuthentication.js","player/Player.js","playlist/PlaylistCreator.js","playlist/CreateNewPlaylist.js","controller/AskForPlayerCode.js","controller/ControlPanel.js","controller/Controller.js","lib/LoadingScreen.js","playlist/EditPlaylist.js","lib/addToPlaylist.js","playlist/AddYoutube.js","playlist/AddSpotify.js","playlist/AddMP3.js","playlist/PlaylistView.js","playlist/MyLists.js","playlist/AllLists.js","playlist/PlayPlaylist.js","Home.js","App.js","serviceWorker.js","index.js"],"names":["REST","CDN","REFRESH_URL","parseTime","time","seconds","minutes","Math","floor","isNaN","getQueryParam","param","URLSearchParams","window","location","search","get","refreshToken","refresh_token","a","Promise","res","rej","fetch","method","mode","headers","body","JSON","stringify","then","data","json","error","console","log","localStorage","removeItem","dateSet","Date","access_token","setItem","splitList","results","reduce","val","i","arr","push","slice","randomValueFromArray","array","min","max","length","random","SpotifyWebPlayback","props","SPOTIFY_API","state","spotifyApi","SpotifyWebApi","setAccessToken","getAccessToken","bind","parse","getItem","spotifyPlayer","_options","id","song","this","play","device_id","getDeviceID","uris","playerEvents","emit","onSpotifyWebPlaybackSDKReady","Spotify","player","Player","name","getOAuthToken","cb","token","on","type","playSong","typeId","pause","addListener","message","s","track_window","previous_tracks","find","x","current_track","paused","endOfSong","setState","togglePlay","nextTrack","connect","className","React","Component","Timer","timeString","interval","undefined","playing","setInterval","generateTimeString","initiateInterval","clearInterval","MP3Player","file","createRef","songID","current","src","addEventListener","currentTime","ref","ParticlesBackground","height","outerHeight","params","particles","number","value","line_linked","enable","move","speed","out_mode","shape","image","width","size","anim","size_min","sync","opacity","retina_detect","AdtRadEvent","decided","adtRadWheel","drawPointer","colors","currentColor","people","map","person","color","generateSegment","fillStyle","text","eventEvents","EventEmitter","artist","title","setTimeout","startAnimation","Winwheel","canvasId","numSegments","segments","generateSegments","rotationAngle","pointerAngle","animation","duration","spins","clearTheCanvas","callbackFinished","pointer","Image","onload","ctx","document","querySelector","getContext","save","translate","rotate","degToRad","drawImage","restore","ShotsEvent","SONGS_CALLED_SHOTS","getRandomSongCalledShots","alt","EscalatieEvent","ESCALATIE_SONGS","WaterEvent","heigth","SpotifyAuthentication","CLIENT_ID","redirectToSpotify","getAccessTokens","tokenChecker","replace","generateAuthUrl","code","redirect_uri","catch","exchangeCodeForAccessToken","history","replaceState","href","split","refresh","getRefreshToken","getTime","spotifyTokenInterval","onClick","socket","io","reconnectionDelay","reconnection","reconnectionAttemps","transports","agent","upgrade","path","rejectUnauthorized","startPlaying","getNextSong","songFinished","coverArt","EVENTS","currentSong","resolve","reject","next","addedBy","user","getSongInformation","event","playerCode","callback","generateQueue","classList","contains","add","remove","songId","lengthString","round","icon","faPlay","key","renderEventField","PlaylistCreator","CreateNewPlaylist","handleSubmit","validate","values","setSubmitting","username","settings","duplicates","status","alert","reload","errors","initialValues","onSubmit","formProps","placeholder","render","msg","disabled","isSubmitting","AskForPlayerCode","submitPlayerCode","input","checkCode","check","controllerEvents","onInput","ControlPanel","skip","reqObj","getCurrentSongInformation","faPauseCircle","faForward","Controller","url","append","LoadingScreen","faSpinner","spin","EditPlaylist","loading","playlist","checkPlaylist","$","css","playlistID","exists","relocate","warn","addClass","removeClass","checkNameInput","uS","set","delete","link","select","setSelectionRange","execCommand","onChange","addName","faArrowRight","noName","addSpotify","addYouTube","addMP3","defaultValue","shareLink","copyLink","noPlaylist","back","BackButton","faArrowLeft","addSongToDatabase","typeData","addSongToPlaylist","AddYoutube","preview","videoPreview","handleChange","removePreview","e","preventDefault","target","includes","getVideoInformation","YOUTUBE_API","video","YoutubePreview","handleAddThis","handleDoNotAddThis","weeks","days","hours","channel","thumbnails","maxres","thumbnail","AddSpotify","parseResults","tracks","items","forEach","item","artists","join","cover","album","images","uri","duration_ms","ResultList","pages","currentPage","list","vis","invis","checkButtons","prevProps","prev","previousPage","nextPage","Result","data-id","faPlus","AddMP3","selectedFile","onFileChange","onFileUpload","onUserStupid","addSong","files","form","FormData","fileInput","uploadBox","PlaylistView","lists","sort","b","lastUpdated","_id","PlaylistItem","songs","toDateString","edit","MyLists","getLists","AllLists","page","fetchLists","PlayPlaylist","wantEvents","songsBetweenEvents","listOfPeople","eventTypes","toPlayer","handleEventChange","handleNumberOfSongsChange","parseList","handleEventTypeChange","p","events","toString","checked","selectedOptions","elem","multiple","TableOfPeople","Home","to","App","volume","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f048f0f7.chunk.js","sourcesContent":["export const REST = 'https://api.nierot.com/music/';\r\nexport const SOCKETIO = 'https://api.nierot.com/';\r\nexport const ALT_COVER_ART = 'https://cdn.nierot.com/memes/missing.jpg';\r\nexport const SPOTIFY_SEARCH = 'https://api.nierot.com/search/';\r\nexport const YOUTUBE_API = 'https://api.nierot.com/youtube/info';\r\nexport const CDN = 'https://cdn.nierot.com/music/';\r\nexport const REFRESH_URL = 'https://api.nierot.com/spotify/auth/refresh';\r\nexport const SPOTIFY_AUTH = 'https://api.nierot.com/spotify/auth/token';\r\nexport const REDIRECT_URI = 'https://music.nierot.com/'","import { REFRESH_URL } from '../settings';\r\n\r\nexport default function parseTime(time) {\r\n    let seconds = time % 60;\r\n    if (seconds < 10) seconds = '0' + seconds;\r\n    \r\n    let minutes = Math.floor(time / 60);\r\n\r\n    if (isNaN(minutes) || isNaN(seconds)) return `0:00`;\r\n    \r\n    return `${minutes}:${seconds}`;\r\n}\r\n\r\nexport function dec2hex(dec) {\r\n  return ('0' + dec.toString(16)).substr(-2);\r\n}\r\n\r\nexport function generateCodeVerifier() {\r\n  var array = new Uint32Array(56/2);\r\n  window.crypto.getRandomValues(array);\r\n\r\n  return Array.from(array, dec2hex).join('');\r\n}\r\n\r\nexport function sha256(plain) {\r\n  const encoder = new TextEncoder();\r\n  const data = encoder.encode(plain);\r\n\r\n  return window.crypto.subtle.digest('SHA-256', data);\r\n}\r\n\r\nexport function base64urlencode(a) {\r\n  var str = '';\r\n  var bytes = new Uint8Array(a);\r\n\r\n  bytes.forEach(byte => str += String.fromCharCode(byte))\r\n\r\n  return btoa(str)\r\n    .replace(/\\+/g, \"-\")\r\n    .replace(/\\//g, \"_\")\r\n    .replace(/=+$/, \"\");\r\n}\r\n\r\nexport function getQueryParams() {\r\n  return new URLSearchParams(window.location.search)\r\n}\r\n\r\nexport function getQueryParam(param) {\r\n  return getQueryParams().get(param);\r\n}\r\n\r\nexport async function refreshToken(refresh_token) {\r\n\r\n  return new Promise(async (res, rej) => await fetch(REFRESH_URL, {\r\n    method: 'POST',\r\n    mode: 'cors',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ refresh_token })\r\n  })\r\n  .then(data => data.json())\r\n  .then(data => {\r\n    if (data.error) {\r\n      console.log('Spotify refresh invalid', data);\r\n      rej(data);\r\n      localStorage.removeItem('spotifyAccess');\r\n    } else {\r\n      data.dateSet = new Date();\r\n      res(data.access_token);\r\n      localStorage.setItem('spotifyAccess', JSON.stringify(data));\r\n    }\r\n  }));\r\n}\r\n\r\nexport function splitList(results) {\r\n  return results.reduce((res, val, i, arr) => {\r\n    if (i % 2 === 0) res.push(arr.slice(i, i + 2));\r\n    return res;\r\n  }, [])\r\n}\r\n\r\nexport function rand(min, max) {\r\n  return Math.floor(Math.random() * (max + 1)) + min;\r\n}\r\n\r\nexport function randomValueFromArray(array) {\r\n  return array[rand(0, array.length - 1)];\r\n}","import React from 'react';\r\nimport SpotifyWebApi from 'spotify-web-api-node';\r\nimport { refreshToken } from '../lib/core';\r\n\r\nexport default class SpotifyWebPlayback extends React.Component {\r\n\r\n  SPOTIFY_API = 'https://api.spotify.com/v1';\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    this.spotifyApi = new SpotifyWebApi();\r\n    this.spotifyApi.setAccessToken(this.getAccessToken());\r\n    this.getAccessToken = this.getAccessToken.bind(this);\r\n  }\r\n\r\n  getAccessToken() {\r\n    return JSON.parse(localStorage.getItem('spotifyAccess')).access_token;\r\n  }\r\n\r\n  getDeviceID() {\r\n    return window.spotifyPlayer._options.id;\r\n  }\r\n\r\n  playSong(song) {\r\n    this.spotifyApi.play({ device_id: this.getDeviceID(), uris: [song] })\r\n  }\r\n\r\n  endOfSong() {\r\n    window.playerEvents.emit('finished');\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    window.onSpotifyWebPlaybackSDKReady = () => {\r\n      const Spotify = window.Spotify;\r\n      const player = new Spotify.Player({\r\n        name: 'Epic Web Player',\r\n        getOAuthToken: async cb => {\r\n          let refresh_token = localStorage.getItem('spotifyRefreshToken');\r\n          await refreshToken(refresh_token)\r\n            .then((token) => {\r\n              cb(token);\r\n            })\r\n        }\r\n      });\r\n      \r\n      window.spotifyPlayer = player;\r\n\r\n      window.playerEvents.emit('spotifyReady', Spotify);\r\n\r\n      window.playerEvents.on('play', data => {\r\n        if (data.type === 'spotify') {\r\n          this.playSong(data.typeId);\r\n        } else {\r\n          player.pause();\r\n        }\r\n      })\r\n\r\n      window.playerEvents.on('stop', () => {\r\n        player.pause();\r\n      })\r\n\r\n      // Error handling\r\n      player.addListener('initialization_error', ({ message }) => { console.error(message); });\r\n      player.addListener('authentication_error', ({ message }) => { console.error(message); });\r\n      player.addListener('account_error', ({ message }) => { console.error(message); });\r\n      player.addListener('playback_error', ({ message }) => { console.error(message); });\r\n\r\n      // Playback status updates\r\n      player.addListener('player_state_changed', s => {\r\n        if (!s) return;\r\n        \r\n        if (this.state && \r\n            s.track_window.previous_tracks.find(x => x.id === s.track_window.current_track.id) &&\r\n            !this.state.paused &&\r\n            s.paused) {\r\n          this.endOfSong();\r\n        }\r\n\r\n        this.setState(s);\r\n      });\r\n\r\n      // Ready\r\n      player.addListener('ready', ({ device_id }) => {\r\n        console.log('Device ready!', device_id);\r\n      });\r\n\r\n      // Not Ready\r\n      player.addListener('not_ready', ({ device_id }) => {\r\n        console.log('Device ID has gone offline', device_id);\r\n      });\r\n\r\n\r\n      // Socket.IO events\r\n      window.playerEvents.on('controllerPause', data => {\r\n        player.togglePlay().then(() => console.log('togglePlay'));\r\n      })\r\n      window.playerEvents.on('controllerSkip', data => {\r\n        if (!data.type === 'spotify') return;\r\n        player.nextTrack().then(() => console.log('nextTrack'));\r\n      });\r\n\r\n      // Connect to the player!\r\n      player.connect();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"SpotifyWebPlayback\"></div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport parseTime from '../lib/core';\r\n\r\nexport default class Timer extends React.Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      timeString: '0:00',\r\n      time: 0,\r\n    }\r\n    this.interval = undefined;\r\n\r\n  }\r\n\r\n  initiateInterval() {\r\n    const { length, playing } = this.props;\r\n    if (playing) {\r\n      if (this.interval === undefined) this.interval = setInterval(() => {\r\n        if (length === this.state.time) return;\r\n        this.setState({\r\n          time: this.state.time + 1\r\n        })\r\n        this.generateTimeString();\r\n      }, 1000);\r\n    } else {\r\n      this.interval = null;\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.initiateInterval();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.initiateInterval();\r\n  }\r\n\r\n  generateTimeString() {\r\n    this.setState({\r\n      timeString: parseTime(this.state.time)\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n    this.interval = undefined;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Timer\">\r\n        {this.state.timeString}\r\n      </div>\r\n\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport './MP3Player.css';\r\nimport { CDN } from '../settings';\r\n\r\nexport default class MP3Player extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      file: undefined,\r\n      playing: false\r\n    }\r\n\r\n    this.player = React.createRef();\r\n  }\r\n\r\n  playSong(songID) {\r\n    this.player.current.src = CDN + songID + '.mp3';\r\n    this.player.current.play();\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    window.playerEvents.on('controllerPause', () => {\r\n      if (!this.state.playing) {\r\n        this.player.current.play();\r\n        this.setState({ playing: true });\r\n      } else {\r\n        this.player.current.pause();\r\n        this.setState({ playing: false })\r\n      }\r\n\r\n    })\r\n\r\n    window.playerEvents.on('play', data => {\r\n      if (data.type === 'mp3') {\r\n        this.playSong(data.typeId);\r\n        this.setState({ playing: true });\r\n      } else if (data.type === 'youtube') {\r\n        this.playSong(data.typeId);\r\n        this.setState({ playing: true })\r\n      } else {\r\n        this.player.current.pause();\r\n      }\r\n    })\r\n\r\n    window.playerEvents.on('stop', () => {\r\n      this.player.current.pause();\r\n    })\r\n\r\n    this.player.current.addEventListener('ended', () => {\r\n      this.player.current.currentTime = 0;\r\n      window.playerEvents.emit('finished');\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"MP3Player\" >\r\n        <audio ref={this.player} />\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport './Particles.css';\r\nimport Particles from 'react-particles-js';\r\n\r\nexport default class ParticlesBackground extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Particles\">\r\n        <Particles \r\n        height={window.outerHeight}\r\n        params={{\r\n          particles: {\r\n            number: {\r\n              value: this.props.particles || 20\r\n            },\r\n            line_linked: {\r\n              enable: false\r\n            },\r\n            move: {\r\n              speed: this.props.speed || 10,\r\n              out_mode: 'out'\r\n            },\r\n            shape: {\r\n              type: [\r\n                'image'\r\n              ],\r\n              image: this.props.image || [\r\n                {\r\n                  src: \"https://cdn.nierot.com/memes/beugel.svg\",\r\n                  height: 40,\r\n                  width: 20\r\n                },\r\n                {\r\n                  src: 'https://cdn.nierot.com/memes/klok.svg',\r\n                  height: 50,\r\n                  width: 30\r\n                },\r\n                {\r\n                  src: 'https://cdn.nierot.com/memes/hertog-jan.svg',\r\n                  height: 30,\r\n                  width: 25\r\n                }\r\n              ],\r\n            },\r\n            size: {\r\n              value: this.props.size || 50,\r\n              random: false,\r\n              anim: {\r\n                enable: false,\r\n                speed: 4,\r\n                size_min: 40,\r\n                sync: true\r\n              }\r\n            },\r\n            opacity: {\r\n              anim: {\r\n                enable: false\r\n              },\r\n              value: this.props.opacity || 0.7\r\n            },\r\n            retina_detect: true\r\n          }\r\n        }}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport Particles from './Particles';\r\nimport './AdtRadEvent.css';\r\nimport Winwheel from 'winwheel';\r\nimport { EventEmitter } from 'events';\r\n\r\nexport default class AdtRadEvent extends React.Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      decided: false\r\n    }\r\n    this.adtRadWheel = {}\r\n    this.drawPointer = this.drawPointer.bind(this);\r\n  }\r\n\r\n  generateSegments() {\r\n    let colors = [ '#22aa22', '#ff2222', '#2222aa' ]\r\n    let currentColor = -1;\r\n    return this.props.people.map(person => {\r\n      currentColor === 2 ? currentColor = 0 : currentColor++;\r\n      let color = colors[currentColor];\r\n      return this.generateSegment(person, color);\r\n    })\r\n  }\r\n\r\n  generateSegment(name, color) {\r\n    return {\r\n      fillStyle: color,\r\n      text: name\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (!window.eventEvents) window.eventEvents = new EventEmitter();\r\n\r\n    // Start playing Atje voor de sfeer\r\n    window.playerEvents.emit('play', {\r\n      type: 'spotify',\r\n      artist: 'Rene Karst',\r\n      title: 'Atje voor de sfeer',\r\n      typeId: 'spotify:track:1YxLxQ8QCGsrtSLuQzpSUz',\r\n    })\r\n\r\n    setTimeout(() => this.adtRadWheel.startAnimation(), 10000);\r\n\r\n    if (!this.props.people) return;\r\n    window.drawPointer = this.drawPointer;\r\n\r\n    this.adtRadWheel = new Winwheel({\r\n      canvasId: 'adtRadCanvas',\r\n      numSegments: this.props.people.length,\r\n      segments: this.generateSegments(),\r\n      rotationAngle: 3,\r\n      pointerAngle: 40,\r\n      animation: {\r\n        type: 'spinToStop',\r\n        duration: 5,\r\n        spins: 8,\r\n        clearTheCanvas: false,\r\n        callbackFinished: `window.drawPointer()`,\r\n      }\r\n    })\r\n    this.drawPointer();\r\n  }\r\n\r\n  drawPointer() {\r\n    let pointer = new Image();\r\n    pointer.onload = () => {\r\n      let canvas = document.querySelector('#adtRadCanvas');\r\n      let ctx = canvas.getContext('2d');\r\n\r\n      if (ctx) {\r\n        ctx.save();\r\n        ctx.translate(700, 138);\r\n        ctx.rotate(this.adtRadWheel.degToRad(220));\r\n        ctx.drawImage(pointer, 0, 0, 120, 120);\r\n        ctx.restore();\r\n      }\r\n    }\r\n\r\n    pointer.src = 'https://cdn.nierot.com/memes/beugel.png'\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.drawPointer = null;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"AdtRadEvent\">\r\n        <div className=\"adtRad\">\r\n          <canvas id=\"adtRadCanvas\" width='800' height='800'></canvas>\r\n        </div>\r\n        <Particles />\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport Particles from './Particles';\r\nimport './ShotsEvent.css';\r\n\r\nexport default class ShotsEvent extends React.Component {\r\n\r\n  SONGS_CALLED_SHOTS = [\r\n    'spotify:track:0FQA22KGLQdDesHAJtrEEE', // Imagine Dragons - Shots\r\n    'spotify:track:1V4jC0vJ5525lEF1bFgPX2', // LMFAO, Lil Jon\r\n  ]\r\n  \r\n  componentDidMount() {\r\n    // Start playing Shots\r\n    window.playerEvents.emit('play', {\r\n      type: 'spotify',\r\n      typeId: this.getRandomSongCalledShots(),\r\n    })\r\n  }\r\n\r\n  getRandomSongCalledShots() {\r\n    return this.SONGS_CALLED_SHOTS[Math.floor(Math.random() * this.SONGS_CALLED_SHOTS.length)];\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ShotsEvent\">\r\n        <Particles image={[\r\n          {\r\n            src: \"https://cdn.nierot.com/memes/shot.svg\",\r\n            height: 10,\r\n            width: 10\r\n          },\r\n          {\r\n            src: 'https://cdn.nierot.com/memes/shot2.svg',\r\n            height: 10,\r\n            width: 10\r\n          },\r\n          {\r\n            src: 'https://cdn.nierot.com/memes/shot3.svg',\r\n            height: 10,\r\n            width: 10\r\n          }\r\n        ]}\r\n        speed={6}\r\n        particles={30}\r\n        size={30}\r\n        opacity={0.6}\r\n        />\r\n        <div className=\"shotsForeground\">\r\n          <img src=\"https://cdn.nierot.com/memes/shots_stupid_image.png\" alt=\"shots\" />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport Particles from './Particles';\r\nimport { randomValueFromArray } from '../../lib/core'; \r\nimport './EscalatieEvent.css';\r\n\r\nexport default class EscalatieEvent extends React.Component {\r\n  \r\n  ESCALATIE_SONGS = [\r\n    'spotify:track:0yrbQBBDM453xkKItntXnb',\r\n    'spotify:track:72lQhFytmSrEVWBiYUWkcR'\r\n  ]\r\n\r\n  componentDidMount() {\r\n    window.playerEvents.emit('play', {\r\n      'type': 'spotify',\r\n      'typeId': randomValueFromArray(this.ESCALATIE_SONGS)\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"EscalatieEvent\">\r\n        <Particles image={[\r\n          {\r\n            src: 'https://cdn.nierot.com/memes/barf.svg',\r\n            height: 25,\r\n            width: 25\r\n          },\r\n          {\r\n            src: 'https://cdn.nierot.com/memes/stroh.svg',\r\n            height: 50,\r\n            width: 50\r\n          }\r\n        ]}\r\n        size={50}\r\n        speed={20}\r\n        />\r\n        <div className=\"escalatie\">\r\n          <img src=\"https://cdn.nierot.com/memes/escalatie.jpg\" alt=\"escalatie\" />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport ParticlesBackground from './Particles';\r\nimport './WaterEvent.css';\r\n\r\nexport default class WaterEvent extends React.Component {\r\n  \r\n  componentDidMount() {\r\n    // Play Taio Cruz - Hangover\r\n    window.playerEvents.emit('play', {\r\n      type: 'spotify',\r\n      typeId: 'spotify:track:5pmL3RzOy3IvGFaSDi4hZL'\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"WaterEvent\">\r\n        <ParticlesBackground image={[\r\n          {\r\n            src: 'https://cdn.nierot.com/memes/water3.svg',\r\n            heigth: 20,\r\n            width: 20\r\n          },\r\n        ]}\r\n        particles={20}\r\n        size={40}\r\n        speed={10}\r\n        opacity={0.6}\r\n        />\r\n        <div className=\"waterForeground\">\r\n          <img src=\"https://cdn.nierot.com/memes/brak_ha-ha.png\" alt=\"ha-ha wat grappig\" />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport { getQueryParam, refreshToken } from '../lib/core';\r\nimport { SPOTIFY_AUTH, REDIRECT_URI } from '../settings';\r\n\r\n\r\nexport default class SpotifyAuthentication extends React.Component {\r\n\r\n  CLIENT_ID = '5bf6a2aacb4d46e9bebec0f9453a7781';\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.redirectToSpotify = this.redirectToSpotify.bind(this);\r\n    this.getAccessTokens = this.getAccessTokens.bind(this);\r\n    this.tokenChecker = this.tokenChecker.bind(this);\r\n  }\r\n\r\n  generateAuthUrl() {\r\n    return `https://accounts.spotify.com/authorize` +\r\n      `?client_id=${this.CLIENT_ID}` +\r\n      `&response_type=code` +\r\n      `&redirect_uri=${REDIRECT_URI}` +\r\n      `&scope=user-read-private%20streaming%20user-read-email`\r\n  }\r\n\r\n  async redirectToSpotify() {\r\n    window.location.replace(this.generateAuthUrl());\r\n  }\r\n\r\n  async exchangeCodeForAccessToken() {\r\n\r\n    fetch(SPOTIFY_AUTH, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        code: getQueryParam('code'),\r\n        redirect_uri: REDIRECT_URI\r\n      })\r\n    })\r\n    .then(data => data.json())\r\n    .then(data => {\r\n      data.dateSet = new Date();\r\n      localStorage.setItem('spotifyRefreshToken', data.refresh_token);\r\n      localStorage.setItem('spotifyAccess', JSON.stringify(data));\r\n    })\r\n    .catch(console.error)\r\n  }\r\n\r\n  getAccessTokens() {\r\n    return JSON.parse(localStorage.getItem('spotifyAccess'));\r\n  }\r\n\r\n  getRefreshToken() {\r\n    return localStorage.getItem('spotifyRefreshToken');\r\n  }\r\n  \r\n\r\n  componentDidMount() {\r\n    if (getQueryParam('code')) {\r\n      this.exchangeCodeForAccessToken();\r\n      window.history.replaceState({}, null, window.location.href.split('?')[0])\r\n    }\r\n\r\n    // Check if token has expired;\r\n    if (localStorage.getItem('spotifyAccess') != null) {\r\n      let token = this.getAccessTokens();\r\n      let refresh = this.getRefreshToken();\r\n      if (token.access_token === undefined || refresh === undefined) {\r\n        console.log('token invalid, purging')\r\n        localStorage.removeItem('spotifyAccess');\r\n      } else if (new Date(token.dateSet).getTime() + 3600000 <= new Date().getTime()) {\r\n        console.log('Spotify tokens expired, purging');\r\n        localStorage.removeItem('spotifyAccess');\r\n      } else {\r\n        // Token still valid;\r\n        window.spotifyTokenInterval = setInterval(this.tokenChecker, 60*1000);\r\n      }\r\n    }\r\n  }\r\n\r\n  tokenChecker() {\r\n    if (!this.getAccessTokens()) return;\r\n    const { dateSet } = this.getAccessTokens();\r\n    const refresh_token = this.getRefreshToken();\r\n\r\n    if (new Date(dateSet).getTime() + 20*60*1000 <= new Date().getTime()) { // If token is 20 minutes old\r\n      refreshToken(refresh_token);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={`SpotifyAuthentication ${this.props.className}`} >\r\n        <button className=\"button is-info\" onClick={this.redirectToSpotify}>Login with Spotify</button>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport SpotifyWebPlayback from '../spotify/SpotifyWebPlayback';\r\nimport './Player.css';\r\nimport Timer from './Timer';\r\nimport parseTime, { getQueryParam } from '../lib/core';\r\nimport io from 'socket.io-client';\r\nimport { ALT_COVER_ART, REST, SOCKETIO } from '../settings';\r\nimport MP3Player from '../mp3/MP3Player';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlay } from '@fortawesome/free-solid-svg-icons';\r\nimport { EventEmitter } from 'events';\r\nimport AdtRadEvent from './events/AdtRadEvent';\r\nimport ShotsEvent from './events/ShotsEvent';\r\nimport EscalatieEvent from './events/EscalatieEvent';\r\nimport WaterEvent from './events/WaterEvent';\r\nimport SpotifyAuthentication from '../spotify/SpotifyAuthentication';\r\n\r\nexport default class Player extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      playing: false\r\n    }\r\n    if (!window.socket) {\r\n      window.socket = io(SOCKETIO, {\r\n        reconnectionDelay: 1000,\r\n        reconnection: true,\r\n        reconnectionAttemps: 10,\r\n        transports: ['websocket'],\r\n        agent: false,\r\n        upgrade: true,\r\n        path: '/music/socket.io',\r\n        rejectUnauthorized: false\r\n      });\r\n    }\r\n    this.startPlaying = this.startPlaying.bind(this);\r\n    this.getNextSong = this.getNextSong.bind(this);\r\n    this.songFinished = this.songFinished.bind(this);\r\n    this.playerEvents = React.createRef();\r\n    this.coverArt = React.createRef();\r\n    if (!window.eventEvents) window.eventEvents = new EventEmitter();\r\n\r\n    if (getQueryParam('eventTypes')) {\r\n      this.EVENTS = getQueryParam('eventTypes').split(',')\r\n      if (this.EVENTS.length === 0) {\r\n        this.EVENTS = [ 'shots', 'adtrad', 'Escalatie', 'water' ];\r\n      }\r\n    } \r\n  }\r\n\r\n  async generateQueue() {\r\n    fetch(`${REST}queue/generate?p=${getQueryParam('p')}&events=${getQueryParam('events')}&listOfPeople=${getQueryParam('listOfPeople')}&songsBetweenEvents=${getQueryParam('songsBetweenEvents')}`)\r\n  }\r\n\r\n  async startPlaying() {\r\n    this.getNextSong()\r\n      .then(() => {\r\n        this.setState({ playing: true })\r\n        window.playerEvents.emit('play', this.state.currentSong);\r\n      })\r\n\r\n  }\r\n\r\n  async getNextSong() {\r\n    return new Promise((resolve, reject) => {\r\n      fetch(`${REST}queue/next?p=${getQueryParam('p')}`)\r\n        .then(data => data.json())\r\n        .then(data => this.setState({ songID: data.next.songID, addedBy: data.next.user }))\r\n        .then(() => this.getSongInformation().then(resolve).catch(reject))\r\n        .catch(console.error)\r\n    })\r\n  }\r\n\r\n  getSongInformation() {\r\n    return new Promise((resolve, reject) => {\r\n      fetch(`${REST}song?song=${this.state.songID}`)\r\n        .then(data => data.json())\r\n        .then(data => {\r\n          if (!data.song) {\r\n            console.error('For some reason this songId is nonsense, playing next song', data);\r\n            this.songFinished();\r\n          } else {\r\n            if (data.type === 'event') {\r\n              data.song = {}\r\n            }\r\n            return data;\r\n          }\r\n        })\r\n        .then(data => this.setState({ currentSong: data.song, playing: true, event: '' }))\r\n        .then(resolve)\r\n        .catch(reject)\r\n    })\r\n\r\n  }\r\n\r\n  async songFinished() {\r\n    await this.getNextSong()\r\n      .then(() => {\r\n        if (this.state.currentSong.type !== 'event') {\r\n          window.playerEvents.emit('play', this.state.currentSong);\r\n        } else {\r\n          window.playerEvents.emit('stop');\r\n          this.setState({ event: this.EVENTS[Math.floor(Math.random() * this.EVENTS.length)] })\r\n        }\r\n      })\r\n  }\r\n\r\n  async componentDidMount() {\r\n    window.socket.on('pause', () => window.playerEvents.emit('controllerPause'));\r\n    window.socket.on('skip', () => {\r\n      this.getNextSong()\r\n        .then(() => {\r\n          if (this.state.currentSong.type !== 'event') {\r\n            window.playerEvents.emit('play', this.state.currentSong);\r\n          } else {\r\n            window.playerEvents.emit('stop');\r\n            this.setState({ event: this.EVENTS[Math.floor(Math.random() * this.EVENTS.length)] })\r\n          }\r\n        })\r\n    });\r\n    window.socket.on('previous', () => window.playerEvents.emit('controllerPrevious'));\r\n    window.socket.on('code', code => this.setState({ playerCode: code }));\r\n\r\n    window.socket.on('whatAreYouPlaying', (data, callback) => {\r\n      if (this.state.currentSong && this.state.currentSong.type === 'event') {\r\n        callback({\r\n          title: this.state.event,\r\n          artist: 'Event'\r\n        })\r\n      } else {\r\n        callback(this.state.currentSong);\r\n      }\r\n    })\r\n\r\n    window.playerEvents.on('finished', this.songFinished);\r\n\r\n    await this.generateQueue();\r\n  }\r\n\r\n  renderEventField() {\r\n    if (!this.state.currentSong || this.state.currentSong.type !== 'event') {\r\n      if (this.playerEvents.current && !this.playerEvents.current.classList.contains('hidden')) {\r\n        this.playerEvents.current.classList.add('hidden');\r\n      }\r\n      if (this.coverArt.current) {\r\n        this.coverArt.current.classList.remove('hidden');\r\n      }\r\n      return null \r\n    } else {\r\n      this.playerEvents.current.classList.remove('hidden');\r\n      switch(this.state.event) {\r\n        case 'adtrad':\r\n          this.coverArt.current.classList.add('hidden');\r\n          return <AdtRadEvent people={getQueryParam('listOfPeople').split(',')}/>\r\n        case 'monsteralarm':\r\n          return <h1>Monster alarm</h1>\r\n        case 'cocktails':\r\n          return <h1>cocktails</h1>\r\n        case 'shots':\r\n          return <ShotsEvent />\r\n        case 'Escalatie':\r\n          return <EscalatieEvent />\r\n        case 'water':\r\n          return <WaterEvent />\r\n        default:\r\n          return null;\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let coverArt;\r\n    if (!this.state.currentSong || !this.state.currentSong.coverArt) coverArt = ALT_COVER_ART;\r\n    else coverArt = this.state.currentSong.coverArt;\r\n    let title = 'Song';\r\n    let length = 0;\r\n    let artist = 'Artist';\r\n    let songId = 'none';\r\n    let lengthString = '0:00';\r\n\r\n    if (this.state.currentSong) {\r\n      title = this.state.currentSong.title;\r\n      length = Math.round(this.state.currentSong.length/1000);\r\n      lengthString = parseTime(length);\r\n      if (isNaN(length)) {\r\n        switch (this.state.event) {\r\n          case 'adtrad':\r\n            lengthString = '3:18'\r\n            break;\r\n          case 'shots':\r\n            lengthString = '3:52';\r\n            break;\r\n          case 'Escalatie':\r\n            lengthString = '3:24';\r\n            break;\r\n          case 'water':\r\n            lengthString = '4:05';\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n      artist = this.state.currentSong.artist;\r\n      songId = this.state.currentSong.songId;\r\n    }\r\n    return (\r\n      <div className=\"Player\">\r\n        {this.state.playing ? null : \r\n        <div className=\"playButton\">\r\n          <button onClick={this.startPlaying}>\r\n            <FontAwesomeIcon icon={faPlay} size=\"6x\" color=\"#ff0038\"/>\r\n          </button>\r\n        </div>\r\n        }\r\n        <div className=\"playerContainer\">\r\n          <h3 id=\"playerCode\">{this.state.playerCode}</h3>\r\n          <h1 className=\"bold\" id=\"songTitle\">{title}</h1>\r\n          <h3 id=\"addedBy\">Added by: {this.state.addedBy || 'unknown'}</h3>\r\n          <h2 className=\"bold\" id=\"artist\">{artist}</h2>\r\n          <h2 id=\"timer\"><Timer key={songId} songId={songId} length={length} playing={this.state.playing}/></h2>\r\n          <img id=\"coverArt\" src={coverArt} ref={this.coverArt} alt=\"cover art\" />\r\n          <h2 id=\"songLength\">{lengthString}</h2>\r\n        </div>\r\n\r\n        <div className=\"playbackHelpers\">\r\n          <SpotifyWebPlayback />\r\n          <MP3Player />\r\n        </div>\r\n        <div className=\"playerEvents hidden\" ref={this.playerEvents}>\r\n          {this.renderEventField()}\r\n        </div>\r\n        <div className=\"spotifyAuthenticationHelper\">\r\n          <SpotifyAuthentication />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport './PlaylistCreator.css';\r\n\r\nexport default class PlaylistCreator extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"PlaylistCreator\">\r\n        <div className=\"Link\" id=\"title\">\r\n          <h1>Playlist editor</h1>\r\n        </div>\r\n        <div className=\"Link\" id=\"new\">\r\n          <a className=\"button is-info\" href=\"/playlist/new\">Create new playlist</a>\r\n        </div>\r\n        <div className=\"Link\" id=\"all\">\r\n          <a className=\"button is-info\" href=\"/playlist/all\">Play/edit playlists</a>\r\n        </div>\r\n        <div className=\"Link\" id=\"my\">\r\n          <a className=\"button is-info\" href=\"/playlist\">My playlists</a>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport './CreateNewPlaylist.css';\r\nimport { REST } from '../settings';\r\nimport { Field, Formik, ErrorMessage, Form } from 'formik';\r\n\r\nexport default class CreateNewPlaylist extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.validate = this.validate.bind(this);\r\n  }\r\n  \r\n\r\n  handleSubmit( values, { props = this.props, setSubmitting}) {\r\n    fetch(`${REST}playlist`, {\r\n      method: 'POST',\r\n      mode: 'cors',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        name: values.name,\r\n        type: 'public',\r\n        user: values.username,\r\n        settings: {\r\n          duplicates: values.duplicates\r\n        }\r\n      })\r\n    }).then(data => {\r\n      if (data.status === 201) {\r\n        window.location.replace('/playlist')\r\n      } else {\r\n        alert('Adding playlist failed, reloading...')\r\n        window.location.reload();\r\n      }\r\n    })\r\n    setSubmitting(false);\r\n    return;\r\n  }\r\n\r\n  validate(values) {\r\n    let errors = {};\r\n\r\n    if (!values.name || values.name === '') {\r\n      errors.name = 'Name required';\r\n    }\r\n    if (!values.username || values.username === '') {\r\n      errors.username = 'Username required';\r\n    }\r\n\r\n    return errors;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"CreateNewPlaylist\">\r\n        <h2>Create a new playlist</h2>\r\n        <Formik\r\n          initialValues={{\r\n            name: '',\r\n            username: '',\r\n            duplicates: true\r\n          }}\r\n          validate={this.validate}\r\n          onSubmit={this.handleSubmit}\r\n        >\r\n          {formProps => \r\n              <Form>\r\n                <Field type=\"text\" name=\"name\" className=\"input is-info\" placeholder=\"Playlist Name\"/>\r\n                <div className=\"errorContainer\" id=\"errorName\">\r\n                  <ErrorMessage name=\"name\" render={msg => <div className=\"error\">{msg}</div>}/>\r\n                </div>\r\n                <Field type=\"text\" name=\"username\" className=\"input is-info\" placeholder=\"Username\"/>\r\n                <div className=\"errorContainer\" id=\"errorUsername\">\r\n                  <ErrorMessage name=\"username\" render={msg => <div className=\"error\">{msg}</div>}/>\r\n                </div>\r\n                <div id=\"duplicates\">\r\n                  Duplicates allowed? &nbsp;\r\n                  <Field type=\"checkbox\" name=\"duplicates\" className=\"checkbox\" />\r\n                </div>\r\n                <button type=\"submit\" disabled={formProps.isSubmitting}>Submit</button>\r\n              </Form>\r\n          }\r\n        </Formik>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport { REST } from '../settings';\r\nimport './AskForPlayerCode.css';\r\n\r\nexport default class AskForPlayerCode extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.submitPlayerCode = this.submitPlayerCode.bind(this)\r\n  }\r\n\r\n  async checkCode(input) {\r\n    return await fetch(REST + 'controller/check', {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        playerCode: input\r\n      }),\r\n      headers: {\r\n        'Access-Control-Allow-Origin': '*',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n  }\r\n\r\n  async submitPlayerCode() {\r\n    let input = document.querySelector('#playerCodeInput').value;\r\n    \r\n    let check = await this.checkCode(input);\r\n\r\n    if (!input || input.length !== 4) {\r\n      return\r\n    } else if (check.status === 400) {\r\n      alert('Player does not exist');\r\n    } else {\r\n      window.controllerEvents.emit('playerCodeSubmitted', input);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"AskForPlayerCode\">\r\n        <h2>Enter the code given in the top left of the player:</h2>\r\n        <input className=\"input is-info\" id=\"playerCodeInput\" type=\"text\" placeholder=\"Player Code\" onInput={this.submitPlayerCode}/>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport { REST } from '../settings';\r\nimport './ControlPanel.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPauseCircle, faForward } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default class ControlPanel extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      currentSong: {}\r\n    }\r\n\r\n    this.pause = this.pause.bind(this)\r\n    this.skip = this.skip.bind(this)\r\n    this.reqObj = this.reqObj.bind(this);\r\n  }\r\n\r\n  reqObj(method = 'POST') {\r\n    return {\r\n      method: method,\r\n      body: JSON.stringify({\r\n        playerCode: this.props.playerCode\r\n      }),\r\n      headers: {\r\n        'Access-Control-Allow-Origin': '*',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getCurrentSongInformation();\r\n  }\r\n  \r\n  pause() { \r\n    setTimeout(() => this.getCurrentSongInformation(), 2000);\r\n    fetch(REST + 'controller/pause', this.reqObj());\r\n  }\r\n\r\n  skip() {\r\n    setTimeout(() => this.getCurrentSongInformation(), 2000);\r\n    fetch(REST + 'controller/skip', this.reqObj());\r\n  }\r\n\r\n  getCurrentSongInformation() {\r\n    fetch(REST + 'controller/playing', this.reqObj())\r\n      .then(data => data.json())\r\n      .then(data => this.setState({ currentSong: data.data || {} }))\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"ControlPanel\">\r\n        <div id=\"img\">\r\n          <img src={this.state.currentSong.coverArt || 'https://cdn.nierot.com/memes/missing.jpg'} alt=\"Album Cover\" />\r\n        </div>\r\n        <div id=\"title\">\r\n          <h2>{this.state.currentSong.title || 'Title'}</h2>\r\n          <h3>{this.state.currentSong.artist || 'Artist' }</h3>\r\n        </div>\r\n        <div id=\"buttonPanel\">\r\n          <button className=\"button\" id=\"pause\" onClick={this.pause}>\r\n            <FontAwesomeIcon icon={faPauseCircle} size=\"3x\"/>\r\n          </button>\r\n          <button className=\"button\" id=\"skip\" onClick={this.skip}>\r\n            <FontAwesomeIcon icon={faForward} size=\"3x\"/>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import { EventEmitter } from 'events';\r\nimport React from 'react';\r\nimport { getQueryParam } from '../lib/core';\r\nimport AskForPlayerCode from './AskForPlayerCode';\r\nimport ControlPanel from './ControlPanel';\r\n\r\nexport default class Controller extends React.Component {\r\n  \r\n  constructor() {\r\n    super();\r\n    this.state = { code: undefined }\r\n    window.controllerEvents = new EventEmitter();\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (getQueryParam('code')) {\r\n      this.setState({ code: getQueryParam('code') });\r\n    }\r\n    window.controllerEvents.on('playerCodeSubmitted', code => {\r\n      this.setState({ code: code })\r\n      let url = new URLSearchParams();\r\n      url.append('code', code);\r\n      window.location.href = window.location.href + '?' + url;\r\n    })\r\n  }\r\n\r\n  refresh() {\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Controller\">\r\n        {this.state.code ? <ControlPanel playerCode={this.state.code}/> : <AskForPlayerCode/>}\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport './LoadingScreen.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default function LoadingScreen() {\r\n  return (\r\n    <div className=\"LoadingScreen\">\r\n      <h1 className=\"bold\">Loading</h1>\r\n      <FontAwesomeIcon icon={ faSpinner } size=\"3x\" spin color=\"black\"/>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport { getQueryParam } from '../lib/core';\r\nimport './EditPlaylist.css';\r\nimport { REST } from '../settings';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons';\r\nimport $ from 'jquery';\r\nimport LoadingScreen from '../lib/LoadingScreen';\r\n\r\nexport default class EditPlaylist extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      playlist: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.checkPlaylist()\r\n    $('#nameWarning').css('visibility', 'hidden');\r\n  }\r\n\r\n  async checkPlaylist() {\r\n    return await fetch(`${REST}playlist/exists`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ playlistID: getQueryParam('p') })\r\n    })\r\n    .then(data => data.json())\r\n    .then(data => this.setState({\r\n      playlist: !!data.exists,\r\n      loading: false\r\n    }))\r\n    .catch(console.error)\r\n  }\r\n\r\n  relocate(type) {\r\n    window.location.replace(`/playlist/edit/${type}?p=${getQueryParam('p')}&n=${getQueryParam('n')}`)\r\n  }\r\n\r\n  addSpotify() {\r\n    this.relocate('spotify');\r\n  }\r\n\r\n  addYouTube() {\r\n    this.relocate('youtube');\r\n  }\r\n\r\n  addMP3() {\r\n    this.relocate('mp3');\r\n  }\r\n\r\n  noPlaylist() {\r\n    return (\r\n      <div className=\"noPlaylist\">\r\n        {this.state.loading ?\r\n          <LoadingScreen />\r\n          :\r\n          <h1>Playlist not found</h1>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n\r\n  checkNameInput() {\r\n    let name = $('#nameInput');\r\n    let warn = $('#nameWarning');\r\n    console.log('oof')\r\n\r\n    if (name.val() === '') {\r\n      name.addClass('is-danger');\r\n      warn.css('visibility', 'visible');\r\n    } else {\r\n      name.removeClass('is-danger');\r\n      warn.css('visibility', 'hidden');\r\n    }\r\n  }\r\n\r\n  addName() {\r\n    this.checkNameInput();\r\n    let name = $('#nameInput').val();\r\n    const uS = new URLSearchParams(window.location.search);\r\n    uS.set('n', name);\r\n    window.location.search = uS;\r\n  }\r\n\r\n  \r\n  shareLink() {\r\n    const uS = new URLSearchParams(window.location.search);\r\n    uS.delete('n');\r\n    return window.location.href.split('?')[0] + '?' + uS;\r\n  }\r\n\r\n  copyLink() {\r\n    let link = document.querySelector('#shareLinkInput');\r\n    link.select();\r\n    link.setSelectionRange(0, 99999);\r\n    document.execCommand('copy');\r\n  }\r\n\r\n  noName() {\r\n    return (\r\n      <div className=\"noName\">\r\n        <br />\r\n        <br />\r\n        <center><h1 className=\"title\">What is your name?</h1></center>\r\n        <br />\r\n        <center>\r\n          <small id=\"nameWarning\">Please fill in a name</small>\r\n        </center>\r\n        <br />\r\n        <div className=\"columns is-mobile\">\r\n          <div className=\"column is-1\"></div>\r\n          <input className=\"input column\" id=\"nameInput\" type=\"text\" onChange={() => this.checkNameInput()}/>\r\n          <div className=\"column is-1\"></div>\r\n        </div>\r\n        <center>\r\n          <br />\r\n          <button className=\"button\" onClick={() => this.addName()}>\r\n            <FontAwesomeIcon icon={faArrowRight} />\r\n          </button>\r\n        </center>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"EditPlaylist\">\r\n        {getQueryParam('n') === null ? this.noName() :\r\n          !this.state.playlist ? this.noPlaylist() :\r\n          <div className=\"editor\">\r\n            <h1 className=\"center\">Add a song?</h1>\r\n            <br />\r\n            <div className=\"buttonColumn\">\r\n              <div className=\"buttonContainer\">\r\n                <button className=\"button is-link is-large\" onClick={() => this.addSpotify()}>Spotify</button>            \r\n              </div>\r\n              <div className=\"buttonContainer\">\r\n                <button className=\"button is-link is-large\" onClick={() => this.addYouTube()}>YouTube</button>\r\n              </div>\r\n              <div className=\"buttonContainer\">\r\n                <button className=\"button is-link is-large\" onClick={() => this.addMP3()}>MP3</button>\r\n              </div>\r\n              <div className=\"buttonContainer sharePlaylist\">\r\n                <h3>Let others add to this playlist:</h3>\r\n                <div/>\r\n                <input type=\"text\" className=\"input\" id=\"shareLinkInput\" defaultValue={this.shareLink()}></input>\r\n                <button className=\"button is-primary\" onClick={() => this.copyLink()}>Copy</button>\r\n              </div>\r\n\r\n            </div>\r\n          </div>}\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport { getQueryParam } from './core';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport { REST } from '../settings';\r\n\r\nexport function back() {\r\n  window.location.href = `/playlist/edit?p=${getQueryParam('p')}&n=${getQueryParam('n')}`\r\n}\r\n\r\nexport function BackButton() {\r\n  return (\r\n    <button className=\"button backButton\" onClick={back}>\r\n      <FontAwesomeIcon icon={faArrowLeft} />\r\n    </button>\r\n  )\r\n};\r\n\r\n/**\r\n * Adds a song to a playlist and to the database\r\n * @param {Object} song The song to add\r\n * @param {string} song.title - The song title\r\n * @param {string} song.artist - A comma separated string of all artists\r\n * @param {number} song.length - Amount of ms a song lasts\r\n * @param {Object} song.typeData Additional data for this type\r\n * @param {string=} song.typeData.id Spotify/YouTube ID \r\n * @param {string} song.coverArt - Cover art url\r\n * @param {*} playlist Playlist ID to add the song to\r\n * @param {*} user The user that added this\r\n * @param {'spotify' | 'youtube' | 'mp3'} type The type of the song\r\n */\r\n\r\nexport function addSongToDatabase(song, playlist, user, type) {\r\n  let id;\r\n  if (type === 'spotify') {\r\n    id = song.id;\r\n  } else {\r\n    id = song.typeData.id;\r\n  }\r\n  fetch(`${REST}song`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n      title: song.title,\r\n      artist: song.artist,\r\n      type: type,\r\n      length: song.length,\r\n      coverArt: song.coverArt,\r\n      typeData: {\r\n        id: id\r\n      }\r\n    })\r\n  })\r\n  .then(data => data.text())\r\n  .then(songID => addSongToPlaylist(songID, playlist, user))\r\n}\r\n\r\nfunction addSongToPlaylist(songID, playlist, user) {\r\n  fetch(`${REST}playlist/song`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n      playlistID: playlist,\r\n      songID: songID,\r\n      user: user\r\n    })\r\n  }).then(() => window.location.reload())\r\n  .catch(console.error)\r\n}","import React from 'react';\r\nimport { addSongToDatabase, BackButton } from '../lib/addToPlaylist';\r\nimport './AddYoutube.css';\r\nimport { YOUTUBE_API } from '../settings';\r\nimport { getQueryParam } from '../lib/core';\r\n\r\nexport default class AddYoutube extends React.Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      input: '',\r\n      preview: false,\r\n      videoPreview: {}\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.removePreview = this.removePreview.bind(this);\r\n    this.input = React.createRef();\r\n  }\r\n\r\n  handleChange(e) {\r\n    e.preventDefault();\r\n    let input = e.target.value;\r\n    if (input.includes('youtube.com')) {\r\n      input = input.split('?v=')[1].split('&')[0];\r\n    } else if (input.includes('youtu.be')) {\r\n      input = input.split('youtu.be/')[1].split('?')[0];\r\n    }\r\n    this.setState({ input: input });\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    this.getVideoInformation();\r\n    e.preventDefault();\r\n  }\r\n\r\n  removePreview() {\r\n    this.input.current.value = '';\r\n    this.setState({\r\n      preview: false,\r\n      videoPreview: {}\r\n    });\r\n  }\r\n\r\n  getVideoInformation() {\r\n    fetch(YOUTUBE_API + '?id=' + this.state.input)\r\n      .then(data => data.json())\r\n      .then(video => this.setState({ videoPreview: video, preview: true }))\r\n      .catch(() => {\r\n        this.input.current.value = '';\r\n        alert('That YouTube video does not exist');\r\n      })\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"AddYoutube\">\r\n        <BackButton />\r\n        <h3 className=\"center\">Add YouTube</h3>\r\n        <div className=\"previewContainer\">\r\n          {this.state.preview ?\r\n          <YoutubePreview video={this.state.videoPreview} remove={this.removePreview} />\r\n          :\r\n          <div className=\"noPreview content\">\r\n            WARNING: This is quite unstable and probably will not work <br />\r\n            Try using <a href=\"https://ytmp3.cc/\">ytmp3.cc</a> and uploading as a mp3 <br />\r\n            Fill in a YouTube ID/link below. <br />\r\n            Examples: <br />\r\n            <ul>\r\n              <li>dQw4w9WgXcQ</li>\r\n              <li>https://youtu.be/M6XaSETNumM</li>\r\n              <li>https://www.youtube.com/watch?v=75Mw8r5gW8E</li>\r\n            </ul>\r\n          </div>\r\n          }\r\n        </div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <input className=\"input is-info\" type=\"text\" value={this.state.value} placeholder=\"YouTube ID\" onChange={this.handleChange} ref={this.input}/>\r\n          <p className=\"hidden\">spacing</p>\r\n          <input className=\"button is-info\" type=\"submit\" value=\"Check\" />  \r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass YoutubePreview extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleAddThis = this.handleAddThis.bind(this);\r\n    this.handleDoNotAddThis = this.handleDoNotAddThis.bind(this);\r\n  }\r\n\r\n  handleDoNotAddThis() {\r\n    this.props.remove();\r\n  }\r\n\r\n  handleAddThis() {\r\n    let { weeks, days, hours, minutes, seconds } = this.props.video.duration;\r\n    let length = weeks * 6.048e8 + days * 8.64e7 + hours * 3.6e6 + minutes * 60000 + seconds * 1000;\r\n    let song = {\r\n      title: this.props.video.title,\r\n      artist: this.props.video.channel.title,\r\n      length: length,\r\n      coverArt: this.props.video.thumbnails.maxres.url || 'https://cdn.nierot.com/memes/missing.jpg',\r\n      typeData: {\r\n        id: this.props.video.id\r\n      }\r\n    }\r\n    addSongToDatabase(song, getQueryParam('p'), getQueryParam('n'), 'youtube');\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props.video)\r\n    let thumbnail = this.props.video.thumbnails.maxres;\r\n    if (!thumbnail) thumbnail = 'https://cdn.nierot.com/memes/missing.jpg'\r\n    else thumbnail = thumbnail.url;\r\n    return (\r\n      <div className=\"YoutubePreview\">\r\n        <p>{this.props.video.title}</p>\r\n        <img src={thumbnail} alt=\"thumbnail\" />\r\n        <div className=\"buttonContainer\">\r\n          <button className=\"button is-success\" onClick={this.handleAddThis}>Add this song?</button>\r\n          &nbsp; &nbsp;\r\n          <button className=\"button is-warning\" onClick={this.handleDoNotAddThis}>Do not add this</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport $ from 'jquery';\r\nimport { SPOTIFY_SEARCH } from '../settings';\r\nimport './AddSpotify.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus, faArrowLeft, faArrowRight } from '@fortawesome/free-solid-svg-icons';\r\nimport { getQueryParam, splitList } from '../lib/core';\r\nimport { BackButton, addSongToDatabase } from '../lib/addToPlaylist';\r\n\r\nexport default class AddSpotify extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { results: [] };\r\n  }\r\n\r\n  onInput(e) {\r\n    let input = e.target.value;\r\n    if (input === '') return\r\n\r\n    fetch(`${SPOTIFY_SEARCH}?query=${input}`)\r\n      .then(data => data.json())\r\n      .then(data => this.parseResults(data.body.tracks.items))\r\n  }\r\n\r\n  parseResults(res) {\r\n    let results = [];\r\n    res.forEach(item => results.push(<Result title={item.name}\r\n                                             artist={item.artists.map(e => e.name).join(', ')} \r\n                                             cover={item.album.images[1].url} \r\n                                             key={item.uri} id={item.uri}\r\n                                             length={item.duration_ms}\r\n                                             coverArt={item.album.images[0].url}\r\n                                             />))\r\n    this.setState({ results: splitList(results) });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"AddSpotify\">\r\n        <BackButton />\r\n        <br/>\r\n        <center><h2>Add a Spotify song</h2></center>\r\n        <div className=\"columns is-mobile\">\r\n          <div className=\"column is-1\"></div>\r\n          <div className=\"column is-10\">\r\n            <input className=\"input spotifyInput\" type=\"text\" placeholder=\"Search Spotify\" onInput={e => this.onInput(e)}/>\r\n          </div>\r\n          <div className=\"column is-1\"></div>\r\n        </div>\r\n        <ResultList results={this.state.results}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass ResultList extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pages: [],\r\n      currentPage: 0\r\n    }\r\n    this.pages = []\r\n    this.list = []\r\n  }\r\n\r\n  invis(className) {\r\n    $(className).css('visibility', ' hidden');\r\n  }\r\n\r\n  vis(className) {\r\n    $(className).css('visibility', 'visible');\r\n  }\r\n\r\n  checkButtons() {\r\n    if (this.state.currentPage === 0) {\r\n      this.vis('.nextButton');\r\n      this.invis('.previousButton');\r\n    } else if (this.state.currentPage === 9) {\r\n      this.invis('.nextButton');\r\n      this.vis('.previousButton');\r\n    } else {\r\n      this.vis('.nextButton');\r\n      this.vis('.previousButton');\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.checkButtons();\r\n  }\r\n\r\n  \r\n  componentDidUpdate(prevProps) {\r\n    this.checkButtons();\r\n    if (prevProps !== this.props) this.setState({ currentPage: 0 })\r\n  }\r\n\r\n\r\n  nextPage() {\r\n    if (this.state.currentPage === 8) {\r\n      this.invis('.nextButton');\r\n    } else {\r\n      this.vis('.nextButton');\r\n    }\r\n    \r\n    let next = this.state.currentPage + 1;\r\n    this.setState({ currentPage: next });\r\n  }\r\n\r\n  previousPage() {\r\n    if (this.state.currentPage === 1) {\r\n      this.invis('.previousButton');\r\n    } else {\r\n      this.vis('.previousButton');\r\n    }\r\n    let prev = this.state.currentPage - 1;\r\n    this.setState({ currentPage: prev });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ResultList\">\r\n        {this.props.results[this.state.currentPage]}\r\n        <div className=\"pageControls\">\r\n          <button className=\"previousButton button\" onClick={() => this.previousPage()} >\r\n            <FontAwesomeIcon icon={faArrowLeft}/>\r\n          </button>\r\n          &nbsp;&nbsp;&nbsp;\r\n          <p>{this.state.currentPage}</p>\r\n          &nbsp;&nbsp;&nbsp;\r\n          <button className=\"nextButton button\" onClick={() => this.nextPage()}>\r\n            <FontAwesomeIcon icon={faArrowRight}/>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass Result extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Result box\" data-id={this.props.id}>\r\n        <article className=\"media\">\r\n          <div className=\"media-left\">\r\n            <figure className=\"image is-96x96\">\r\n              <img src={this.props.cover} alt=\"Cover\"></img>\r\n            </figure>\r\n          </div>\r\n\r\n          <div className=\"media-content\">\r\n            <div className=\"content\">\r\n              <strong>{this.props.title}</strong>\r\n              <br/>\r\n              {this.props.artist}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"media-right\">\r\n            <button className=\"button\" data-id={this.props.id} onClick={() => addSongToDatabase(this.props, getQueryParam('p'), getQueryParam('n'), 'spotify')}>\r\n              <FontAwesomeIcon icon={faPlus} />\r\n            </button>\r\n          </div>\r\n        </article>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport { addSongToDatabase, BackButton } from '../lib/addToPlaylist';\r\nimport { getQueryParam } from '../lib/core';\r\nimport { CDN } from '../settings';\r\nimport './AddMP3.css';\r\n\r\nexport default class AddMP3 extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedFile: null\r\n    };\r\n\r\n    this.onFileChange = this.onFileChange.bind(this);\r\n    this.onFileUpload = this.onFileUpload.bind(this);\r\n    this.onUserStupid = this.onUserStupid.bind(this);\r\n    this.addSong = this.addSong.bind(this);\r\n  };\r\n\r\n  onFileChange(event) {\r\n    this.setState({ selectedFile: event.target.files[0] });\r\n  }\r\n\r\n  onFileUpload() {\r\n    \r\n    let form = new FormData();\r\n\r\n    form.append('file', this.state.selectedFile);\r\n\r\n    fetch(`${CDN}`, {\r\n      method: 'POST',\r\n      body: form,\r\n    })\r\n    .then(data => data.json())\r\n    .then(data => data.id)\r\n    .then(this.addSong)\r\n    .catch(console.error)\r\n  }\r\n\r\n  addSong(id) {\r\n    let song = {\r\n      title: this.state.selectedFile.name,\r\n      artist: 'mp3',\r\n      length: -1,\r\n      coverArt: 'https://cdn.nierot.com/memes/missing.jpg',\r\n      typeData: {\r\n        id: id\r\n      }\r\n    }\r\n    addSongToDatabase(song, getQueryParam('p'), getQueryParam('n'), 'mp3');\r\n  }\r\n\r\n  onUserStupid() {\r\n    this.setState({ selectedFile: null });    \r\n  }\r\n\r\n  uploadBox() {\r\n    if (this.state.selectedFile) {\r\n      return (\r\n        <div className=\"upload center\">\r\n          You want to upload: {this.state.selectedFile.name}\r\n          <br />\r\n          <br />\r\n          Correct?\r\n          <div className=\"buttonBox\">\r\n            <button className=\"button is-success\" onClick={this.onFileUpload}>Yes</button>\r\n            <button className=\"button is-danger\" onClick={this.onUserStupid}>No</button>\r\n          </div>\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div className=\"upload center\">\r\n          <input className=\"input is-info\" id=\"mp3FileUpload\" type=\"file\" ref={this.fileInput} onChange={this.onFileChange}/>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"AddMP3\">\r\n        <BackButton />\r\n        <div className=\"headerText center\">\r\n          <h1>Add MP3</h1>\r\n          <p>Select below the MP3 file you want to add to the playlist.</p>\r\n          <p>Proceed with caution, the files you upload are not stored securly.</p>\r\n          <p>You also are responsible for any copyright issues that might crop up from the works you upload.</p>\r\n        </div>\r\n        {this.uploadBox()}\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport './PlaylistView.css';\r\n\r\nexport default class PlaylistView extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lists: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      lists: this.props.lists.sort((a, b) => new Date(b.lastUpdated) - new Date(a.lastUpdated))\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"PlaylistView\">\r\n        {this.state.lists.map(list => <PlaylistItem key={list._id} id={list._id} name={list.name} user={list.user} lastUpdated={list.lastUpdated}/>)}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass PlaylistItem extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      songs: []\r\n    }\r\n  }\r\n\r\n  play() {\r\n    window.location.replace(`/playlist/play?p=${this.props.id}`);\r\n  }\r\n\r\n  edit() {\r\n    window.location.replace(`/playlist/edit?p=${this.props.id}`);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"PlaylistItem\">\r\n        <div className=\"box\">\r\n          <article>\r\n            <div className=\"media-content\">\r\n              <div className=\"content\">\r\n                <div className=\"playlistTitle\">\r\n                  <span>{this.props.name}</span>\r\n                  <span>{this.props.user}</span>\r\n                  <span>{new Date(this.props.lastUpdated).toDateString()}</span>\r\n                </div>\r\n                <button className=\"button is-success\" onClick={() => this.play()}>Play</button>\r\n                &nbsp;\r\n                <button className=\"button is-info\" onClick={() => this.edit()}>Edit</button>\r\n              </div>\r\n            </div>\r\n          </article>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport PlaylistView from './PlaylistView';\r\nimport { REST } from '../settings'\r\n\r\nexport default class MyLists extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lists: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getLists()\r\n  }\r\n\r\n  getLists() {\r\n    fetch(`${REST}playlist?user=${'oof'}`)\r\n      .then(data => data.json())\r\n      .then(data => this.setState({ lists: data }))\r\n      .catch(console.error)\r\n  }\r\n\r\n  back() {\r\n    window.location.replace('/playlist');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"MyLists\">\r\n        <button className=\"button backButton\" onClick={() => this.back()}>\r\n          <FontAwesomeIcon icon={faArrowLeft} />\r\n        </button>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <button onClick={() => this.getLists()}>oof</button>\r\n        <PlaylistView lists={this.state.lists}/>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport './AllLists.css';\r\nimport { REST } from '../settings';\r\nimport PlaylistView from './PlaylistView';\r\nimport LoadingScreen from '../lib/LoadingScreen';\r\n\r\nexport default class AllLists extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      lists: undefined,\r\n      page: 1\r\n    }\r\n  }\r\n  \r\n  fetchLists() {\r\n    fetch(`${REST}playlist/all`)\r\n      .then(data => data.json())\r\n      .then(data => this.setState({ loading: false, lists: data }))\r\n  }\r\n\r\n\r\n  back() {\r\n    window.location.replace('/playlist');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"AllLists\">\r\n        {this.state.loading ? \r\n        <div className=\"loading\">\r\n          {this.fetchLists()}\r\n          <LoadingScreen />\r\n        </div> \r\n        :\r\n        <div className=\"loaded\">\r\n          <button className=\"button backButton\" onClick={() => this.back()}>\r\n            <FontAwesomeIcon icon={faArrowLeft} />\r\n          </button>\r\n          <br />\r\n          <br />\r\n          <center><h1>All Playlists</h1></center>\r\n          <br />\r\n          <div className=\"listGrid\">\r\n            <PlaylistView loading={this.state.loading} lists={this.state.lists}/>\r\n          </div>\r\n        </div>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport { getQueryParam } from '../lib/core';\r\nimport './PlayPlaylist.css';\r\n\r\nexport default class PlayPlaylist extends React.Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      wantEvents: false,\r\n      songsBetweenEvents: 20,\r\n      listOfPeople: [],\r\n      eventTypes: []\r\n    };\r\n\r\n    this.toPlayer = this.toPlayer.bind(this);\r\n    this.handleEventChange = this.handleEventChange.bind(this);\r\n    this.handleNumberOfSongsChange = this.handleNumberOfSongsChange.bind(this);\r\n    this.parseList = this.parseList.bind(this);\r\n    this.handleEventTypeChange = this.handleEventTypeChange.bind(this);\r\n  }\r\n\r\n  toPlayer() {\r\n    if (!localStorage.getItem('spotifyAccess')) {\r\n      alert('You are not logged into spotify! Sending you back to home to login');\r\n      return window.location.replace('/');\r\n    }\r\n    if (this.state.listOfPeople.length === 0) {\r\n      return this.setState({ listOfPeople: ['List', 'Of', 'People', 'Undefined', 'Good', 'Job']})\r\n    }\r\n\r\n    if (this.state.eventTypes.length === 0) {\r\n      return this.setState({ eventTypes: ['adtrad'] })\r\n    }\r\n    const params = new URLSearchParams({\r\n      p: getQueryParam('p'),\r\n      events: this.state.wantEvents,\r\n      listOfPeople: this.state.listOfPeople,\r\n      songsBetweenEvents: this.state.songsBetweenEvents,\r\n      eventTypes: this.state.eventTypes\r\n    })\r\n    window.location.replace('/player?' + params.toString());\r\n    // window.location.replace(`/player?p=${getQueryParam('p')}&events=${this.state.wantEvents}&listOfPeople=${this.state.listOfPeople}&songsBetweenEvents=${this.state.songsBetweenEvents}`);\r\n  }\r\n\r\n  handleEventChange(e) {\r\n    this.setState({ wantEvents: e.target.checked });\r\n  }\r\n  \r\n  handleNumberOfSongsChange(e) {\r\n    this.setState({ songsBetweenEvents: e.target.value });\r\n  }\r\n\r\n  handleEventTypeChange(e) {\r\n    this.setState({ eventTypes: [...e.target.selectedOptions].map(elem => elem.value) });\r\n  }\r\n\r\n  parseList(e) {\r\n    let text = e.target.value;\r\n    let people = text.split(',');\r\n    this.setState({ listOfPeople: people });\r\n  }\r\n\r\n  TableOfPeople() {\r\n    if (!this.state.listOfPeople) return null;\r\n    return (\r\n      <div className=\"TableOfPeople\">\r\n        <table>\r\n          <tbody>\r\n            {this.state.listOfPeople.map(person => <tr key={Math.random()}>{person}</tr>)}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"PlayPlaylist\">\r\n        <h1>Play options</h1>\r\n\r\n        Events?:\r\n        <input type=\"checkbox\" id=\"wantEvents\" onChange={this.handleEventChange}/>\r\n        \r\n        {this.state.wantEvents ?\r\n          <div className=\"wantEvents\">\r\n            Number of songs between events:\r\n            <input type=\"number\" defaultValue={20} onChange={this.handleNumberOfSongsChange}/>\r\n            Which events do you want?\r\n            <select name=\"typeOfEvents\" onChange={this.handleEventTypeChange} multiple>\r\n              <option value=\"adtrad\">Adtrad</option>\r\n              <option value=\"Escalatie\">Escalatie</option>\r\n              <option value=\"water\">Water</option>\r\n              <option value=\"shots\">Shots!</option>\r\n            </select>\r\n            <br/>\r\n            List of people participating in the events (comma-seperated):\r\n            <br />\r\n            <textarea id=\"listOfPeople\" onChange={this.parseList}/>\r\n            {this.TableOfPeople()}\r\n          </div>\r\n        : null }\r\n\r\n        <button className=\"button\" onClick={this.toPlayer}>Play!</button>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport SpotifyAuthentication from './spotify/SpotifyAuthentication';\r\nimport './Home.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Home extends React.Component {\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"Home\">\r\n        <div className=\"bold\" id=\"title\"><h1>Music player</h1></div>\r\n        <Link className=\"Link\" id=\"playlistButton\" to=\"/playlist\">\r\n          <button className=\"button is-info\">Play/edit a playlist</button>\r\n        </Link>\r\n        <Link className=\"Link\" id=\"controllerButton\" to=\"/controller\">\r\n          <button className=\"button is-info\">Remote control</button>\r\n        </Link>\r\n        <SpotifyAuthentication className=\"Link\"/>\r\n        <footer>\r\n\r\n        </footer>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\nimport 'bulma';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Player from './player/Player';\nimport { EventEmitter } from 'events';\nimport PlaylistCreator from './playlist/PlaylistCreator';\nimport CreateNewPlaylist from './playlist/CreateNewPlaylist';\nimport Controller from './controller/Controller';\nimport EditPlaylist from './playlist/EditPlaylist';\nimport AddYoutube from './playlist/AddYoutube';\nimport AddSpotify from './playlist/AddSpotify';\nimport AddMP3 from './playlist/AddMP3';\nimport MyLists from './playlist/MyLists';\nimport AllLists from './playlist/AllLists';\nimport LoadingScreen from './lib/LoadingScreen';\nimport PlayPlaylist from './playlist/PlayPlaylist';\nimport Home from './Home';\nimport WaterEvent from './player/events/WaterEvent';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    window.playerEvents = new EventEmitter();\n    window.state = {\n      playing: false,\n      player: undefined,\n      volume: 1.0\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <Switch>\n            <Route path=\"/testComponent\"> <WaterEvent /> </Route>\n            <Route path=\"/loading\"> <LoadingScreen /> </Route>\n            <Route path=\"/player\"> <Player/> </Route>\n            <Route path=\"/controller\"> <Controller/> </Route>\n            <Route path=\"/playlist/new\"> <CreateNewPlaylist/> </Route>\n            <Route path=\"/playlist/edit/spotify\"> <AddSpotify/> </Route>\n            <Route path=\"/playlist/edit/youtube\"> <AddYoutube/> </Route>\n            <Route path=\"/playlist/edit/mp3\"> <AddMP3/> </Route>\n            <Route path=\"/playlist/edit\"> <EditPlaylist/> </Route>\n            <Route path=\"/playlist/me\"> <MyLists/> </Route>\n            <Route path=\"/playlist/all\"> <AllLists/> </Route>\n            <Route path=\"/playlist/play\"> <PlayPlaylist /> </Route>\n            <Route path=\"/playlist\"> <PlaylistCreator/> </Route>\n            <Route path=\"/\"> <Home /> </Route>\n          </Switch>\n        </Router>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}